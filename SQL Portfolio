/*

Covid Dataset -Data Exploration
Concepts used- Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/

--Display data from coviddeaths

SELECT *
  FROM coviddeaths
 WHERE continent IS NOT NULL
 ORDER BY 3,
          4;

-- Display data from covidvaccinations

SELECT *
  FROM covidvaccinations
 WHERE continent IS NOT NULL
 ORDER BY 3,4;
 

-- Select Data that we are going to use.

SELECT location,
       date,
       total_cases,
       new_cases,
       total_deaths,
       population
  FROM coviddeaths
 WHERE continent IS NOT NULL
 ORDER BY 1,
          2;


--Total cases as per location

SELECT location,
       SUM(total_cases) AS total_cases_per_country
  FROM coviddeaths
 GROUP BY location
HAVING continent IS NOT NULL
 ORDER BY 1,
          2;
 

-- Shows Death Percentage and likelyhood of death when in contact in United states.

SELECT Location,
       date,
       total_cases,
       total_deaths,
       (total_deaths / total_cases) * 100 AS DeathPercentage
  FROM coviddeaths
 WHERE location LIKE '%states%' AND 
       continent IS NOT NULL
 ORDER BY 1,
          2;


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

SELECT Location,
       date,
       Population,
       total_cases,
       (total_cases / population) * 100 AS PercentPopulationInfected
  FROM coviddeaths
 ORDER BY 1,
          2;


-- Countries with Highest Infection Rate compared to Population

SELECT Location,
       Date,
       Population,
       MAX(total_cases) AS HighestInfectionCount,
       Max( (total_cases / population) ) * 100 AS PercentPopulationInfected
  FROM coviddeaths
 GROUP BY Location,
          Date,
          Population
 ORDER BY PercentPopulationInfected DESC;


-- Countries with Highest Death Count per Population

SELECT Location,
       MAX(CAST (Total_deaths AS INT) ) AS TotalDeathCount
  FROM coviddeaths
 WHERE continent IS NOT NULL
 GROUP BY Location
 ORDER BY TotalDeathCount DESC;


-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

SELECT continent,
       MAX(CAST (Total_deaths AS INT) ) AS TotalDeathCount
  FROM coviddeaths
 WHERE continent IS NOT NULL
 GROUP BY continent
 ORDER BY TotalDeathCount DESC;


-- Countries with highest death count excluding European Union, World and International

SELECT location,
       SUM(CAST (new_deaths AS INT) ) AS TotalDeathCount
  FROM coviddeaths
 WHERE continent IS NOT NULL AND 
       location NOT IN ('European Union', 'World', 'International') 
 GROUP BY location
 ORDER BY TotalDeathCount DESC;


-- Global death count numbers

SELECT SUM(new_cases) AS total_cases,
       SUM(CAST (new_deaths AS INT) ) AS total_deaths,
       SUM(CAST (new_deaths AS INT) ) / SUM(New_Cases) * 100 AS DeathPercentage
  FROM coviddeaths
 WHERE continent IS NOT NULL
 ORDER BY 1,
          2;


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has received at least one Covid Vaccine

SELECT d.continent,
       d.location,
       d.date,
       d.population,
       v.new_vaccinations,
       SUM(CAST (v.new_vaccinations AS INT) ) OVER (PARTITION BY d.Location ORDER BY d.location,
       d.Date) AS RollingPeopleVaccinated
  FROM coviddeaths d
       JOIN
       covidvaccinations v ON d.location = v.location AND 
                              d.date = v.date
 WHERE d.continent IS NOT NULL
 ORDER BY 2,
          3;


-- Using CTE to perform Calculation on Partition By in previous query

WITH PopvsVac (
    Continent,
    Location,
    Date,
    Population,
    New_Vaccinations,
    RollingPeopleVaccinated
)
AS (
    SELECT d.continent,
           d.location,
           d.date,
           d.population,
           v.new_vaccinations,
           SUM(CAST (v.new_vaccinations AS INT) ) OVER (PARTITION BY d.Location ORDER BY d.location,
           d.Date) AS RollingPeopleVaccinated
      FROM coviddeaths d
           JOIN
           covidvaccinations v ON d.location = v.location AND 
                                  d.date = v.date
     WHERE d.continent IS NOT NULL
)
SELECT *,
       (RollingPeopleVaccinated / Population) * 100
  FROM PopvsVac;


-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists PercentPopulationVaccinated
Create Table PercentPopulationVaccinated
(
Continent text(255),
Location text(255),
Date date,
Population real,
New_vaccinations real,
RollingPeopleVaccinated real
)

Insert into PercentPopulationVaccinated
Select d.continent, d.location, d.date, d.population, v.new_vaccinations
, SUM(CAST(v.new_vaccinations as INT)) OVER (Partition by d.Location Order by d.location, d.Date) as RollingPeopleVaccinated
From coviddeaths d
Join covidvaccinations v
On d.location = v.location
and d.date = v.date

Select *, (RollingPeopleVaccinated/Population)*100
From PercentPopulationVaccinated


-- Creating View to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated AS
    SELECT d.continent,
           d.location,
           d.date,
           d.population,
           v.new_vaccinations,
           SUM(CAST (v.new_vaccinations AS INT) ) OVER (PARTITION BY d.Location ORDER BY d.location,
           d.Date) AS RollingPeopleVaccinated
      FROM coviddeaths d
           JOIN
           covidvaccinations v ON d.location = v.location AND 
                                  d.date = v.date
     WHERE d.continent IS NOT NULL;

